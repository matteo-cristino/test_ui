import type { ActivityTaskCanceledEvent, ActivityTaskCancelRequestedEvent, ActivityTaskCompletedEvent, ActivityTaskFailedEvent, ActivityTaskScheduledEvent, ActivityTaskStartedEvent, ActivityTaskTimedOutEvent, ChildWorkflowExecutionCanceledEvent, ChildWorkflowExecutionCompletedEvent, ChildWorkflowExecutionFailedEvent, ChildWorkflowExecutionStartedEvent, ChildWorkflowExecutionTerminatedEvent, ChildWorkflowExecutionTimedOutEvent, CommonHistoryEvent, EventAttribute, EventAttributeKey, ExternalWorkflowExecutionCancelRequestedEvent, ExternalWorkflowExecutionSignaledEvent, HistoryEvent, IterableEvent, MarkerRecordedEvent, NexusOperationCanceledEvent, NexusOperationCancelRequestedEvent, NexusOperationCompletedEvent, NexusOperationFailedEvent, NexusOperationScheduledEvent, NexusOperationStartedEvent, NexusOperationTimedOutEvent, RequestCancelExternalWorkflowExecutionFailedEvent, RequestCancelExternalWorkflowExecutionInitiatedEvent, SignalExternalWorkflowExecutionFailedEvent, SignalExternalWorkflowExecutionInitiatedEvent, StartChildWorkflowExecutionFailedEvent, StartChildWorkflowExecutionInitiatedEvent, TimerCanceledEvent, TimerFiredEvent, TimerStartedEvent, UpsertWorkflowSearchAttributesEvent, WorkflowEvent, WorkflowExecutionCanceledEvent, WorkflowExecutionCancelRequestedEvent, WorkflowExecutionCompletedEvent, WorkflowExecutionContinuedAsNewEvent, WorkflowExecutionFailedEvent, WorkflowExecutionSignaledEvent, WorkflowExecutionStartedEvent, WorkflowExecutionTerminatedEvent, WorkflowExecutionTimedOutEvent, WorkflowExecutionUpdateAcceptedEvent, WorkflowExecutionUpdateAdmittedEvent, WorkflowExecutionUpdateCompletedEvent, WorkflowTaskCompletedEvent, WorkflowTaskFailedEvent, WorkflowTaskScheduledEvent, WorkflowTaskStartedEvent, WorkflowTaskTimedOutEvent } from '../types/events';
export type ActivityType = (typeof activityEvents)[number];
export declare const activityEvents: readonly ["ActivityTaskCanceled", "ActivityTaskCancelRequested", "ActivityTaskCompleted", "ActivityTaskFailed", "ActivityTaskScheduled", "ActivityTaskStarted", "ActivityTaskTimedOut"];
export type TimerType = (typeof timerEvents)[number];
export declare const timerEvents: readonly ["TimerStarted", "TimerCanceled", "TimerFired"];
export type SignalType = (typeof signalEvents)[number];
export declare const signalEvents: readonly ["WorkflowExecutionSignaled", "SignalExternalWorkflowExecutionFailed", "SignalExternalWorkflowExecutionInitiated"];
export type MarkerType = (typeof markerEvents)[number];
export declare const markerEvents: readonly ["MarkerRecorded"];
export type EventType = (typeof eventTypes)[number];
export declare const eventTypes: readonly ["ActivityTaskCanceled", "ActivityTaskCancelRequested", "ActivityTaskCompleted", "ActivityTaskFailed", "ActivityTaskScheduled", "ActivityTaskStarted", "ActivityTaskTimedOut", "TimerStarted", "TimerCanceled", "TimerFired", "WorkflowExecutionSignaled", "SignalExternalWorkflowExecutionFailed", "SignalExternalWorkflowExecutionInitiated", "MarkerRecorded", "StartChildWorkflowExecutionInitiated", "ChildWorkflowExecutionStarted", "ChildWorkflowExecutionCompleted", "ChildWorkflowExecutionCanceled", "ChildWorkflowExecutionFailed", "ChildWorkflowExecutionTerminated", "ChildWorkflowExecutionTimedOut", "StartChildWorkflowExecutionFailed", "NexusOperationScheduled", "NexusOperationStarted", "NexusOperationCompleted", "NexusOperationFailed", "NexusOperationCanceled", "NexusOperationTimedOut", "NexusOperationCancelRequested", "WorkflowExecutionCanceled", "WorkflowExecutionCancelRequested", "WorkflowExecutionCompleted", "WorkflowExecutionContinuedAsNew", "WorkflowExecutionFailed", "WorkflowExecutionStarted", "WorkflowExecutionTerminated", "WorkflowExecutionTimedOut", "WorkflowExecutionOptionsUpdated", "WorkflowTaskCompleted", "WorkflowTaskFailed", "WorkflowTaskScheduled", "WorkflowTaskStarted", "WorkflowTaskTimedOut", "ExternalWorkflowExecutionCancelRequested", "ExternalWorkflowExecutionSignaled", "RequestCancelExternalWorkflowExecutionFailed", "RequestCancelExternalWorkflowExecutionInitiated", "UpsertWorkflowSearchAttributes", "WorkflowExecutionUpdateAccepted", "WorkflowExecutionUpdateAdmitted", "WorkflowExecutionUpdateCompleted", "WorkflowExecutionUpdateRejected", "WorkflowExecutionUpdateRequested", "WorkflowPropertiesModified"];
export declare const eventAttributeKeys: Readonly<EventAttributeKey[]>;
export type ResetEventType = (typeof validResetEventTypes)[number];
export declare const validResetEventTypes: string[];
export declare const findAttributeKey: (event: HistoryEvent) => EventAttributeKey;
export declare const findAttributes: (event: HistoryEvent, key: EventAttributeKey) => EventAttribute;
export declare const findAttributesAndKey: (event: HistoryEvent) => {
    key: EventAttributeKey;
    attributes: EventAttribute;
};
export declare const isWorkflowExecutionStartedEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is WorkflowExecutionStartedEvent;
export declare const isWorkflowExecutionCompletedEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is WorkflowExecutionCompletedEvent;
export declare const isWorkflowExecutionFailedEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is WorkflowExecutionFailedEvent;
export declare const isWorkflowExecutionTimedOutEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is WorkflowExecutionTimedOutEvent;
export declare const isWorkflowTaskScheduledEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is WorkflowTaskScheduledEvent;
export declare const isWorkflowTaskStartedEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is WorkflowTaskStartedEvent;
export declare const isWorkflowTaskCompletedEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is WorkflowTaskCompletedEvent;
export declare const isWorkflowTaskTimedOutEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is WorkflowTaskTimedOutEvent;
export declare const isPureWorkflowTaskFailedEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is WorkflowTaskFailedEvent;
export declare const isWorkflowTaskFailedEvent: (event: WorkflowEvent) => boolean;
export declare const isActivityTaskScheduledEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is ActivityTaskScheduledEvent;
export declare const isActivityTaskStartedEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is ActivityTaskStartedEvent;
export declare const isActivityTaskCompletedEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is ActivityTaskCompletedEvent;
export declare const isActivityTaskFailedEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is ActivityTaskFailedEvent;
export declare const isActivityTaskTimedOutEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is ActivityTaskTimedOutEvent;
export declare const isTimerStartedEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is TimerStartedEvent;
export declare const isTimerFiredEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is TimerFiredEvent;
export declare const isActivityTaskCancelRequestedEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is ActivityTaskCancelRequestedEvent;
export declare const isActivityTaskCanceledEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is ActivityTaskCanceledEvent;
export declare const isTimerCanceledEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is TimerCanceledEvent;
export declare const isMarkerRecordedEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is MarkerRecordedEvent;
export declare const isWorkflowExecutionSignaledEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is WorkflowExecutionSignaledEvent;
export declare const isWorkflowExecutionTerminatedEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is WorkflowExecutionTerminatedEvent;
export declare const isWorkflowExecutionCancelRequestedEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is WorkflowExecutionCancelRequestedEvent;
export declare const isWorkflowExecutionCanceledEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is WorkflowExecutionCanceledEvent;
export declare const isRequestCancelExternalWorkflowExecutionInitiatedEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is RequestCancelExternalWorkflowExecutionInitiatedEvent;
export declare const isRequestCancelExternalWorkflowExecutionFailedEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is RequestCancelExternalWorkflowExecutionFailedEvent;
export declare const isExternalWorkflowExecutionCancelRequestedEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is ExternalWorkflowExecutionCancelRequestedEvent;
export declare const isWorkflowExecutionContinuedAsNewEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is WorkflowExecutionContinuedAsNewEvent;
export declare const isStartChildWorkflowExecutionInitiatedEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is StartChildWorkflowExecutionInitiatedEvent;
export declare const isStartChildWorkflowExecutionFailedEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is StartChildWorkflowExecutionFailedEvent;
export declare const isChildWorkflowExecutionStartedEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is ChildWorkflowExecutionStartedEvent;
export declare const isChildWorkflowExecutionCompletedEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is ChildWorkflowExecutionCompletedEvent;
export declare const isChildWorkflowExecutionFailedEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is ChildWorkflowExecutionFailedEvent;
export declare const isChildWorkflowExecutionCanceledEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is ChildWorkflowExecutionCanceledEvent;
export declare const isChildWorkflowExecutionTimedOutEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is ChildWorkflowExecutionTimedOutEvent;
export declare const isChildWorkflowExecutionTerminatedEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is ChildWorkflowExecutionTerminatedEvent;
export declare const isSignalExternalWorkflowExecutionInitiatedEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is SignalExternalWorkflowExecutionInitiatedEvent;
export declare const isSignalExternalWorkflowExecutionFailedEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is SignalExternalWorkflowExecutionFailedEvent;
export declare const isExternalWorkflowExecutionSignaledEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is ExternalWorkflowExecutionSignaledEvent;
export declare const isUpsertWorkflowSearchAttributesEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is UpsertWorkflowSearchAttributesEvent;
export declare const isResetEvent: (event: WorkflowEvent) => boolean;
export declare const isLocalActivityMarkerEvent: (event: IterableEvent | CommonHistoryEvent) => boolean;
export declare const isWorkflowExecutionUpdateAcceptedEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is WorkflowExecutionUpdateAcceptedEvent;
export declare const isWorkflowExecutionUpdateAdmittedEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is WorkflowExecutionUpdateAdmittedEvent;
export declare const isWorkflowExecutionUpdateCompletedEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is WorkflowExecutionUpdateCompletedEvent;
export declare const isFailedWorkflowExecutionUpdateCompletedEvent: (event: WorkflowEvent) => boolean;
export declare const isNexusOperationScheduledEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is NexusOperationScheduledEvent;
export declare const isNexusOperationStartedEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is NexusOperationStartedEvent;
export declare const isNexusOperationCompletedEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is NexusOperationCompletedEvent;
export declare const isNexusOperationFailedEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is NexusOperationFailedEvent;
export declare const isNexusOperationCanceledEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is NexusOperationCanceledEvent;
export declare const isNexusOperationTimedOutEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is NexusOperationTimedOutEvent;
export declare const isNexusOperationCancelRequestedEvent: (event: IterableEvent | CommonHistoryEvent | undefined) => event is NexusOperationCancelRequestedEvent;
