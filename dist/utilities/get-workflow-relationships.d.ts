import type { DescribeNamespaceResponse } from '../types';
import type { ChildWorkflowExecutionCanceledEvent, ChildWorkflowExecutionCompletedEvent, ChildWorkflowExecutionFailedEvent, ChildWorkflowExecutionTerminatedEvent, ChildWorkflowExecutionTimedOutEvent, IterableEvent, WorkflowEvents } from '../types/events';
import type { WorkflowExecution } from '../types/workflows';
import type { WorkflowIdentifier } from '../types/workflows';
export type ChildWorkflowClosedEvent = ChildWorkflowExecutionCompletedEvent | ChildWorkflowExecutionFailedEvent | ChildWorkflowExecutionCanceledEvent | ChildWorkflowExecutionTimedOutEvent | ChildWorkflowExecutionTerminatedEvent;
export declare const isChildWorkflowClosedEvent: (event: IterableEvent) => event is ChildWorkflowClosedEvent;
type WorkflowRelationships = {
    hasRelationships: boolean;
    hasChildren: boolean;
    children: ChildWorkflowClosedEvent[];
    first: string | undefined;
    previous: string | undefined;
    parent: WorkflowIdentifier | undefined;
    parentNamespaceName: string | undefined;
    next: string | undefined;
    scheduleId: string | undefined;
    relationshipCount: number;
};
export declare const getWorkflowRelationships: (workflow: WorkflowExecution | null, fullEventHistory: WorkflowEvents, namespaces: DescribeNamespaceResponse[]) => WorkflowRelationships;
export {};
