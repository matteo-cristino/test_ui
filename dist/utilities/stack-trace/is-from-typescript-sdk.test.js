import { describe, expect, it } from 'vitest';
import { isFromTypeScriptSDK } from './is-from-typescript-sdk';
import GoStacktraceQueryJson from '../../../fixtures/stacktrace-query.go-sdk.json';
import JavaStacktraceQueryJson from '../../../fixtures/stacktrace-query.java-sdk.json';
import UnixTypeScriptStacktraceQueryJson from '../../../fixtures/stacktrace-query.ts-sdk.json';
import WindowsTypeScriptStacktraceQueryJson from '../../../fixtures/stacktrace-query.ts-sdk.windows.json';
describe('isFromTypeScripSDK', () => {
    it('should return true for a stacktrace generated by TypeScipt SDK on a Unix System', () => {
        const stackTraceText = UnixTypeScriptStacktraceQueryJson.queryResult.payloads[0].data;
        const result = isFromTypeScriptSDK(stackTraceText);
        expect(result).toBe(true);
    });
    it('should return true for a stacktrace generated by TypeScipt SDK on a Windows System', () => {
        const stackTraceText = WindowsTypeScriptStacktraceQueryJson.queryResult.payloads[0].data;
        const result = isFromTypeScriptSDK(stackTraceText);
        expect(result).toBe(true);
    });
    it('should return false for a stacktrace generated by GO SDK', () => {
        const stackTraceText = GoStacktraceQueryJson.queryResult.payloads[0].data;
        const result = isFromTypeScriptSDK(stackTraceText);
        expect(result).toBe(false);
    });
    it('should return false for a stacktrace generated by Java SDK', () => {
        const stackTraceText = JavaStacktraceQueryJson.queryResult.payloads[0].data;
        const result = isFromTypeScriptSDK(stackTraceText);
        expect(result).toBe(false);
    });
});
