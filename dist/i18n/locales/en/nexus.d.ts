export declare const Namespace: "nexus";
export declare const Strings: {
    readonly nexus: "Nexus";
    readonly 'nexus-endpoint': "Nexus Endpoint | {{id}}";
    readonly endpoint: "Endpoint";
    readonly endpoints: "Nexus Endpoints";
    readonly 'all-endpoints': "All Endpoints";
    readonly 'my-endpoints': "My Endpoints";
    readonly 'back-to-endpoints': "Back To Nexus Endpoints";
    readonly 'back-to-endpoint': "Back To Nexus Endpoint";
    readonly 'create-endpoint': "Create Nexus Endpoint";
    readonly 'endpoint-name': "Endpoint Name";
    readonly 'endpoint-name-placeholder': "Nexus Endpoint must have a unique name";
    readonly 'select-endpoint': "Select a Endpoint";
    readonly 'task-queue-placeholder': "Enter a Task Queue";
    readonly 'endpoint-alias': "Endpoint Alias";
    readonly target: "Target";
    readonly 'target-description': "Specify the target Namespace and task queue the worker will poll on.";
    readonly 'target-namespace': "Target Namespace";
    readonly 'select-namespace': "Select a Namespace";
    readonly 'nexus-description': "Add a link to your repo or instructions to help other users in this account use this endpoint.";
    readonly 'description-placeholder': "//Provide a readme for users to use this endpoint";
    readonly handler: "Handler";
    readonly 'delete-endpoint': "Delete Endpoint";
    readonly 'delete-modal-title': "Delete Nexus Endpoint?";
    readonly 'delete-modal-confirmation-preface': "Are you sure you want to delete ";
    readonly 'delete-modal-confirmation-postface': "Any Workflows calling this endpoint will encounter failures.";
    readonly 'type-confirm-preface': "Type ";
    readonly 'type-confirm-postface': "to delete this endpoint.";
    readonly 'endpoint-name-hint': "Endpoint name must start with A-Z, a-z or _ and can only contain A-Z, a-z, 0-9, or _";
    readonly 'endpoint-name-hint-with-dash': "Endpoint name must start with A-Z or a-z and can only contain A-Z, a-z, 0-9 or -";
    readonly 'access-policy': "Access Policy";
    readonly 'allowed-caller-namespaces': "Allowed caller Namespaces";
    readonly 'allowed-caller-namespaces-description': "Namespace(s) that are allowed to call this Endpoint.";
    readonly 'select-namespaces': "Select Namespace(s)";
    readonly 'selected-namespaces_one': "{{count}} Namespace selected";
    readonly 'selected-namespaces_other': "{{count}} Namespaces selected";
    readonly 'empty-state': "No Nexus Endpoints found, try a new search.";
    readonly 'nexus-callback': "Nexus Callback";
    readonly callback: {
        readonly standby: "Nexus Callback is standing by, waiting to be triggered.";
        readonly scheduled: "Nexus Callback is in the queue waiting to be executed or is currently executing.";
        readonly 'backing-off': "Nexus Callback has failed with a retryable error and is backing off before the next attempt.";
        readonly failed: "Nexus Callback has failed.";
        readonly succeeded: "Nexus Callback has succeeded.";
    };
    readonly 'callback-url': "Callback URL";
    readonly 'last-attempt-completed-time': "Last Attempt Completed Time";
    readonly 'next-attempt-scheduled-time': "Next Attempt Scheduled Time";
    readonly 'last-attempt-failure': "Last Attempt Failure";
    readonly 'blocked-reason': "Blocked Reason";
    readonly link: "Link";
    readonly 'link-namespace': "Link Namespace";
};
