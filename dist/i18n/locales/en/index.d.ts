export declare const EN: "en";
export declare const English: {
    readonly batch: {
        readonly 'nav-title': "Batch";
        readonly 'list-page-title': "Batch Operations";
        readonly 'describe-page-title': "Batch Operation";
        readonly 'empty-state-title': "No Batch Operations";
        readonly 'back-link': "Back to Batch Operations";
        readonly 'operation-type': "Operation Type";
        readonly details: "Operation Details";
        readonly identity: "Identity";
        readonly 'total-operations': "Total Operations";
        readonly 'operations-failed': "{{ count, number }} failed";
        readonly 'operations-succeeded': "{{ count, number }} succeeded";
        readonly 'operations-progress': "{{ percent }}% complete";
        readonly results: "Operation Results";
        readonly 'max-concurrent-alert-title': "Maximum concurrent Batch Operations met";
        readonly 'max-concurrent-alert-description': "Only 1 in progress Batch Operation is permitted. If you are attempting to create a new Batch Operation while there is one currently running, it will fail.";
        readonly 'job-id-input-hint': "Job ID must be unique. If left blank, a randomly generated UUID will be used.";
        readonly 'job-id-input-error': "Job ID must only contain URL safe characters";
    };
    readonly common: {
        readonly loading: "Loading...";
        readonly filtering: "filtering";
        readonly 'unknown-error': "An unknown error occurred.";
        readonly search: "Search";
        readonly apply: "Apply";
        readonly remove: "Remove";
        readonly query: "Query";
        readonly ago: "ago";
        readonly 'all-time': "All Time";
        readonly time: "Time";
        readonly custom: "Custom";
        readonly 'start-time': "Start Time";
        readonly 'end-time': "End Time";
        readonly 'close-time': "Close Time";
        readonly relative: "Relative";
        readonly utc: "UTC";
        readonly local: "Local";
        readonly cancel: "Cancel";
        readonly 'clear-all': "Clear all";
        readonly 'clear-all-capitalized': "Clear All";
        readonly 'ante-meridiem': "AM";
        readonly 'post-meridiem': "PM";
        readonly ascending: "Ascending";
        readonly descending: "Descending";
        readonly start: "Start";
        readonly end: "End";
        readonly true: "True";
        readonly false: "False";
        readonly after: "After";
        readonly before: "Before";
        readonly between: "Between";
        readonly 'in-last': "In Last";
        readonly 'starts-with': "Starts with";
        readonly equals: "Equals";
        readonly 'greater-than': "Greater Than";
        readonly 'greater-than-or-equal-to': "Greater than or equal to";
        readonly 'less-than': "Less than";
        readonly 'less-than-or-equal-to': "Less than or equal to";
        readonly 'is-null': "Is null";
        readonly 'is-not-null': "Is not null";
        readonly all: "All";
        readonly submit: "Submit";
        readonly reason: "Reason";
        readonly 'reason-placeholder': "Enter a reason";
        readonly confirm: "Confirm";
        readonly summary: "Summary";
        readonly scheduled: "Scheduled";
        readonly 'show-all': "Show all";
        readonly 'date-and-time': "Date & Time";
        readonly event: "Event";
        readonly 'collapse-all': "Collapse All";
        readonly 'expand-all': "Expand All";
        readonly id: "ID";
        readonly yes: "Yes";
        readonly no: "No";
        readonly maybe: "Maybe";
        readonly refresh: "Refresh";
        readonly 'error-occurred': "An Error Occurred";
        readonly save: "Save";
        readonly 'workflow-type': "Workflow Type";
        readonly 'workflow-id': "Workflow ID";
        readonly 'run-id': "Run ID";
        readonly 'task-queue': "Task Queue";
        readonly preview: "Preview";
        readonly status: "Status";
        readonly created: "Created: {{created}}";
        readonly 'last-updated': "Last Updated: {{updated}}";
        readonly edit: "Edit";
        readonly delete: "Delete";
        readonly view: "View";
        readonly memo: "Memo";
        readonly notes: "Notes";
        readonly add: "Add";
        readonly 'from-now': "from now";
        readonly 'hours-abbreviated': "hrs";
        readonly 'minutes-abbreviated': "min";
        readonly 'seconds-abbreviated': "sec";
        readonly days: "days";
        readonly 'number-input-placeholder': "Enter a number";
        readonly enter: "Enter";
        readonly 'no-results': "No results";
        readonly 'type-or-paste-in': "Type or paste in";
        readonly 'per-page': "Per Page";
        readonly 'next-page': "Next Page";
        readonly 'previous-page': "Previous Page";
        readonly 'go-to-page': "Go to page {{page}}";
        readonly 'next-row': "Next Row";
        readonly 'previous-row': "Previous Row";
        readonly today: "Today";
        readonly close: "Close";
        readonly deprecated: "Deprecated";
        readonly namespaces: "Namespaces";
        readonly cluster: "Cluster";
        readonly 'codec-server': "Codec Server";
        readonly workflows: "Workflows";
        readonly 'workflows-plural_one': "Workflow";
        readonly 'workflows-plural_other': "Workflows";
        readonly schedules: "Schedules";
        readonly 'schedules-plural_one': "{{ count }} Schedule";
        readonly 'schedules-plural_other': "{{ count }} Schedules";
        readonly archive: "Archive";
        readonly import: "Import";
        readonly feedback: "Feedback";
        readonly 'log-out': "Log out";
        readonly 'my-profile': "My Profile";
        readonly details: "Details";
        readonly unknown: "Unknown";
        readonly key: "Key";
        readonly type: "Type";
        readonly disabled: "Disabled";
        readonly enabled: "Enabled";
        readonly primary: "Primary";
        readonly previous: "Previous";
        readonly next: "Next";
        readonly name: "Name";
        readonly version: "Version";
        readonly main: "Main";
        readonly 'select-all': "Select All";
        readonly absolute: "Absolute";
        readonly 'copy-icon-title': "Click to copy content";
        readonly 'copy-success-icon-title': "Content copied to clipboard";
        readonly 'filter-workflows': "Filter workflows";
        readonly 'event-category-filter-label': "Open event category filter menu";
        readonly 'event-date-filter-label': "Open event date filter menu";
        readonly 'date-time-menu-label': "Open time format menu";
        readonly 'workflow-filter-label': "Open {{attribute}} filter menu";
        readonly 'workflow-status-filter-label': "Open execution status filter menu";
        readonly 'clear-input-button-label': "Clear input";
        readonly 'keyboard-shortcuts': "Keyboard Shortcuts";
        readonly 'close-keyboard-shortcuts': "Close keyboard shortcuts";
        readonly none: "None";
        readonly 'user-profile': "User Profile";
        readonly 'arrow-key-up': "Arrow key up";
        readonly 'arrow-key-down': "Arrow key down";
        readonly 'arrow-key-left': "Arrow key left";
        readonly 'arrow-key-right': "Arrow key right";
        readonly on: "On";
        readonly off: "Off";
        readonly labs: "Labs";
        readonly experimental: "Experimental";
        readonly timezone: "Timezone {{ timezone }}";
        readonly 'time-unit': "Time Unit";
        readonly 'time-format': "Time Format";
        readonly 'time-range': "Time Range";
        readonly 'based-on-time-preface': "Based on";
        readonly 'download-json': "Download JSON";
        readonly 'skip-nav': "Skip to Main Content";
        readonly timeline: "Timeline";
        readonly graph: "Graph";
        readonly 'equal-to': "Equal to";
        readonly 'not-equal-to': "Not equal to";
        readonly 'encode-failed': "Data encoding failed";
        readonly 'decode-failed': "Data decoding failed";
        readonly 'job-id': "Job ID";
        readonly 'auto-refresh': "Auto refresh";
        readonly 'auto-refresh-tooltip': "{{ interval }} second page refresh";
        readonly 'view-more': "View More...";
        readonly 'view-all': "View All";
        readonly 'view-all-runs': "View All Runs";
        readonly 'more-options': "More options";
        readonly download: "Download";
        readonly duration: "Duration";
        readonly 'history-size-bytes': "History Size (Bytes)";
        readonly 'execution-details': "Execution Details";
        readonly day: "Day";
        readonly night: "Night";
        readonly docs: "Docs";
        readonly 'upload-error': "Error uploading file";
        readonly description: "Description";
        readonly active: "Active";
        readonly inactive: "Inactive";
        readonly 'page-not-found': "Page Not Found";
        readonly value: "Value";
        readonly table: "Table";
        readonly failure: "Failure";
        readonly 'stack-trace': "Stack Trace";
        readonly source: "Source";
        readonly url: "URL";
        readonly state: "State";
        readonly attempt: "Attempt";
        readonly message: "Message";
        readonly 'upload-json': "Upload JSON";
        readonly 'input-valid-json': "Input must be valid JSON";
        readonly 'workflows-table': "Workflows Table";
        readonly 'schedules-table': "Schedules Table";
        readonly column: "Column";
        readonly columns: "Columns";
    };
    readonly "date-picker": {
        readonly 'next-month': "Next Month";
        readonly 'previous-month': "Previous Month";
    };
    readonly deployments: {
        readonly deployments: "Deployments";
        readonly deployment: "Deployment";
        readonly 'worker-deployments': "Worker Deployments";
        readonly 'worker-deployments-description': "A simple line that explains the power and relationship of Deployment IDs, Series, and Build IDs.";
        readonly 'worker-deployments-search-placeholder': "Filter by Deployment Name";
        readonly 'go-to-workflows': "Go to Workflows";
        readonly 'empty-state-title': "No Worker Deployments";
        readonly 'error-message-fetching': "Error fetching deployments";
        readonly 'empty-state-description': "Want to learn about versioning? <value proposition about versioning and why you should use it>. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque vitae lacus eu mauris facilisis sodales.";
        readonly name: "Deployment Name";
        readonly 'current-version': "Current Version";
        readonly 'deployment-version': "Deployment Version";
        readonly 'deployment-behavior': "Deployment Behavior";
        readonly created: "Created At";
        readonly deployed: "Deployed At";
        readonly ramping: "Ramping";
        readonly 'ramping-percentage': "Ramping {{ percentage }}%";
        readonly workflows: "Go to Workflows";
        readonly version: "Version";
        readonly status: "Status";
        readonly current: "Current";
        readonly 'task-queue-name': "Task Queue Name";
        readonly 'task-queue-type': "Task Queue Type";
        readonly 'rollout-started': "Rollout Started At";
        readonly 'rollout-completed': "Rollout Completed At";
        readonly 'rollout-url': "Rollout URL";
        readonly 'worker-id': "Worker ID";
        readonly 'back-to-deployments': "Back to Worker Deployments";
        readonly 'series-name': "Series Name";
        readonly 'first-poller': "First Poller";
        readonly 'last-poller': "Last Poller";
        readonly 'first-task': "First Task";
        readonly 'last-task': "Last Task";
        readonly 'rollout-id': "Rollout ID";
    };
    readonly workflows: {
        readonly 'loading-workflows': "Loading workflows";
        readonly 'recent-workflows': "Recent Workflows";
        readonly 'recent-workflows-link': "View Recent Workflows";
        readonly 'workflows-count_one': "{{count, number}} workflow";
        readonly 'workflows-count_other': "{{count, number}} workflows";
        readonly 'workflows-error-querying': "A error has occurred while querying for Workflows.";
        readonly 'filtered-workflows-count': "Results {{filtered, number}} of {{total, number}} workflows";
        readonly terminate: "Terminate";
        readonly 'batch-terminate-modal-title': "Terminate Workflows";
        readonly 'batch-cancel-modal-title': "Cancel Workflows";
        readonly 'batch-reset-modal-title': "Reset Workflows";
        readonly 'workflow-action-reason-placeholder': "{{action}} from the Web UI";
        readonly 'workflow-action-reason-placeholder-with-email': "{{action}} from the Web UI by {{email}}";
        readonly 'batch-operation-confirmation-all': "Are you sure you want to {{action}} all workflows matching the following query? This action cannot be undone.";
        readonly 'batch-operation-count-disclaimer': "Note: The actual count of workflows that will be affected is the total number of running workflows matching this query at the time of clicking \"{{action}}\".";
        readonly 'batch-confirmation_one': "Are you sure you want to {{action}} one running workflow?";
        readonly 'batch-confirmation_other': "Are you sure you want to {{action}} {{count, number}} running workflows?";
        readonly 'batch-reset-confirmation_one': "Are you sure you want to reset one workflow?";
        readonly 'batch-reset-confirmation_other': "Are you sure you want to reset {{count, number}} workflows?";
        readonly 'batch-operation-confirmation-input-hint': "If you supply a custom reason, \"{{placeholder}}\" will be appended to it. If you omit a reason, the placeholder will be used.";
        readonly 'batch-terminate-all-success': "The batch terminate request is processing in the background.";
        readonly 'batch-cancel-all-success': "The batch cancel request is processing in the background.";
        readonly 'batch-reset-all-success': "The batch reset request is processing in the background.";
        readonly 'configure-headers': "Configure {{title}}";
        readonly 'close-configure-headers': "Close {{title}} configuration";
        readonly 'configure-headers-description': "Add (<1></1>), re-arrange (<2></2>), and remove (<3></3>), {{type}} to personalize the {{title}} Table.";
        readonly 'all-statuses': "All Statuses";
        readonly running: "Running";
        readonly 'timed-out': "Timed Out";
        readonly completed: "Completed";
        readonly failed: "Failed";
        readonly 'contd-as-new': "Cont'd as New";
        readonly 'continued-as-new': "Continued as New";
        readonly terminated: "Terminated";
        readonly canceled: "Canceled";
        readonly paused: "Paused";
        readonly reset: "Reset";
        readonly signal: "Send a Signal";
        readonly update: "Send an Update";
        readonly 'update-success': "Update successful";
        readonly 'update-in-progress': "Update in progress";
        readonly 'n-selected': "{{count, number}} selected";
        readonly 'all-selected': "All {{count, number}} selected.";
        readonly 'select-all-leading': "or ";
        readonly 'select-all': "select all {{count, number}} workflows";
        readonly 'select-all-trailing': " matching your query";
        readonly 'request-cancellation': "Request Cancellation";
        readonly 'back-to-workflows': "Back to Workflows";
        readonly input: "Input";
        readonly 'initial-input': "Initial Input";
        readonly 'example-input': "Example Input";
        readonly 'input-and-results': "Input and Results";
        readonly 'continued-as-new-with-input': "Continued as New with Input";
        readonly results: "Results";
        readonly 'event-history-view': "Event History View";
        readonly 'event-history': "Event History";
        readonly history: "History";
        readonly 'full-history': "Full History";
        readonly compact: "Compact";
        readonly json: "JSON";
        readonly download: "Download";
        readonly 'workflow-actions': "Workflow Actions";
        readonly 'reset-disabled-unauthorized': "Resetting workflows is not enabled, please contact your administrator for assistance.";
        readonly 'reset-disabled-pending-children': "Cannot reset workflows with pending children.";
        readonly 'reset-disabled-no-events': "Cannot reset workflows without WorkflowTaskStarted, WorkflowTaskCompleted, or WorkflowTaskTimedOut events.";
        readonly 'signal-disabled': "Signaling workflows is not enabled, please contact your administrator for assistance.";
        readonly 'update-disabled': "Updating workflows is not enabled, please contact your administrator for assistance.";
        readonly 'terminate-disabled': "Terminating workflows is not enabled, please contact your adminstrator for assistance.";
        readonly 'terminate-success': "Workflow terminated.";
        readonly 'cancel-success': "Workflow canceled.";
        readonly 'signal-success': "Workflow signaled.";
        readonly 'reset-modal-title': "Reset Workflow";
        readonly 'reset-event-radio-group-description': "Choose an Event to reset to";
        readonly 'reset-reapply-type-label': "Reapply Signals that happened after the Reset point";
        readonly 'reset-exclude-signals': "Exclude Signals that happened after the Reset point.";
        readonly 'reset-exclude-updates': "Exclude Updates that happened after the Reset point.";
        readonly 'cancel-modal-title': "Cancel Workflow";
        readonly 'cancel-modal-confirmation': "Are you sure you want to cancel this workflow? This action cannot be undone.";
        readonly 'terminate-modal-title': "Terminate Workflow";
        readonly 'terminate-modal-confirmation': "Are you sure you want to terminate this workflow? This action cannot be undone.";
        readonly 'signal-modal-title': "Send a Signal";
        readonly 'signal-name-label': "Signal name";
        readonly 'signal-payload-input-label': "Data";
        readonly 'signal-payload-input-label-hint': "(only single JSON payload supported)";
        readonly 'update-modal-title': "Send an Update";
        readonly 'cancel-request-sent': "Cancel Request Sent";
        readonly 'cancel-request-sent-description': "The request to cancel this Workflow Execution has been sent. If the Workflow uses the cancellation API, it'll cancel at the next available opportunity.";
        readonly 'reset-success-alert-title': "This Workflow has been reset";
        readonly 'reset-success-alert-description': "You can find the resulting Workflow Execution <1>here</1>.";
        readonly 'history-tab': "History";
        readonly 'workflow-history': "Workflow History";
        readonly 'workers-tab': "Workers";
        readonly 'pending-activities-tab': "Pending Activities";
        readonly 'call-stack-tab': "Call Stack";
        readonly 'queries-tab': "Queries";
        readonly 'metadata-tab': "Metadata";
        readonly 'update-tab': "Update";
        readonly 'workflow-404-title': "This is not the Workflow you are looking for";
        readonly 'workflow-error-title': "We are having technical difficulties retrieving this Workflow";
        readonly 'workflow-error-no-workers-title': "No Workers Running";
        readonly 'workflow-error-no-workers-description': "There are no Workers polling the {{taskQueue}} Task Queue.";
        readonly 'workflow-error-no-compatible-workers-title': "No Compatible Workers Running";
        readonly 'workflow-error-no-compatible-workers-description': "There are no compatible Workers polling the {{taskQueue}} Task Queue.";
        readonly 'state-transitions': "State Transitions";
        readonly 'start-and-close-time': "Start & Close Time";
        readonly relationships: "Relationships";
        readonly parents_zero: "0 Parents";
        readonly parents_one: "1 Parent";
        readonly 'pending-children_one': "1 Pending Child";
        readonly 'pending-children_other': "{{count}} Pending Children";
        readonly children_one: "1 Child";
        readonly children_other: "{{count}} Children";
        readonly 'show-children': "All Workflows Visible";
        readonly 'hide-children': "Child Workflows Hidden";
        readonly first: "{{count}} First";
        readonly previous: "{{count}} Previous";
        readonly next: "{{count}} Next";
        readonly 'no-relationships': "This workflow doesn't have any relationships";
        readonly 'parent-id': "Parent Workflow ID";
        readonly 'parent-run-id': "Parent Run ID";
        readonly 'parent-workflow': "Parent Workflow";
        readonly 'first-execution': "First Execution";
        readonly 'previous-execution': "Previous Execution";
        readonly 'current-execution': "Current Execution";
        readonly 'next-execution': "Next Execution";
        readonly 'child-id': "Child Workflow ID";
        readonly 'child-run-id': "Child Run ID";
        readonly 'pending-activities': "Pending Activities";
        readonly 'pending-activities-canceled': "Pending activities have been canceled.";
        readonly 'activity-type': "Activity Type";
        readonly 'last-heartbeat': "Last Heartbeat";
        readonly attempt: "Attempt";
        readonly 'attempts-left': "Attempts Left";
        readonly retry: "Retry";
        readonly 'next-retry': "Next Retry";
        readonly expiration: "Expiration";
        readonly 'heartbeat-details': "Heartbeat Details";
        readonly 'last-failure': "Last Failure";
        readonly 'last-accessed': "Last Accessed";
        readonly 'workflow-task-handler': "Workflow Task Handler";
        readonly 'activity-handler': "Activity Handler";
        readonly 'workers-empty-state': "No Workers Found";
        readonly 'call-stack-empty-state': "No Call Stacks Found";
        readonly 'no-workers-failure-message': "This will fail if you have no workers running.";
        readonly 'no-workers-running-message': "Please make sure you have at least one worker running.";
        readonly 'call-stack-alert': "This is a call stack showing each location where Workflow code is waiting.";
        readonly 'call-stack-at': "Call Stack at";
        readonly 'call-stack-link-preface': "To enable ";
        readonly 'call-stack-link': "call stacks";
        readonly 'call-stack-link-postface': ", run a Worker on the {{taskQueue}} Task Queue.";
        readonly 'json-formatting': "JSON Formatting";
        readonly 'query-type': "Query Type";
        readonly 'query-arg': "Query Arg";
        readonly 'run-query': "Run Query";
        readonly 'refresh-query': "Refresh Query";
        readonly 'pending-activities-empty-state': "No Pending Activities";
        readonly 'activity-id': "Activity ID";
        readonly summary: "Summary";
        readonly details: "Details";
        readonly 'summary-and-details': "Summary & Details";
        readonly 'current-details': "Current Details";
        readonly 'maximum-attempts': "Maximum Attempts";
        readonly 'retry-expiration': "Retry Expiration";
        readonly state: "State";
        readonly 'last-started-time': "Last Started Time";
        readonly 'scheduled-time': "Scheduled Time";
        readonly 'last-worker-identity': "Last Worker Identity";
        readonly unlimited: "Unlimited";
        readonly 'no-expiration': "No Expiration";
        readonly 'no-retry': "None";
        readonly filter: "Filter";
        readonly 'view-search-input': "View Raw Query";
        readonly 'view-search-description': "For advanced search syntax";
        readonly 'close-search-input': "Show Filters";
        readonly 'select-time': "Select Time";
        readonly 'search-placeholder': "Enter a query";
        readonly 'child-workflows': "Child Workflows";
        readonly 'retry-workflows': "Retry Workflows";
        readonly 'workflow-name': "Workflow Name";
        readonly 'filter-by': "filter by {{workflowName}} type";
        readonly 'select-all-workflows': "Select all Workflows";
        readonly 'select-workflow': "Select Workflow {{workflow}}";
        readonly 'empty-state-title': "No Workflows Found";
        readonly 'empty-state-description': "If you have filters applied, try adjusting them. Otherwise please check your syntax and try again.";
        readonly 'remove-filter-label': "Remove {{attribute}} filter";
        readonly 'remove-keyword-label': "Remove {{keyword}} keyword";
        readonly 'move-column-up-label': "Move {{column}} column up";
        readonly 'move-column-down-label': "Move {{column}} column down";
        readonly 'add-column-label': "Add {{column}} column";
        readonly 'remove-column-label': "Remove {{column}} column";
        readonly 'pin-column-label': "Pin {{column}} column";
        readonly 'unpin-column-label': "Unpin {{column}} column";
        readonly 'all-headings-in-view': "All available columns are in view";
        readonly 'no-headings-in-view': "No columns in view";
        readonly 'archived-workflows': "Archived Workflows";
        readonly archival: "Archival";
        readonly 'workflow-query-empty-state-title': "No Results";
        readonly 'workflow-query-empty-state-preface': "There are no results for the applied filters.";
        readonly 'workflow-query-empty-state-postface': "Try adjusting or clearing the filters to see the Workflows running on this Namespace.";
        readonly 'workflow-query-error-state': "There is an error with filtering Workflows.";
        readonly 'workflow-empty-state-title': "No Workflows running in this Namespace";
        readonly 'workflow-empty-state-description': "You can populate the Web UI with sample Workflows. You can find a complete list of executable code samples at";
        readonly 'visibility-disabled-archival': "This namespace is currently enabled for archival but visibility is not enabled.";
        readonly 'archival-link-preface': "To enable ";
        readonly 'archival-link': "archival visibility";
        readonly 'archival-disabled-title': "This namespace is currently not enabled for archival.";
        readonly 'archival-disabled-details': "Run this command to enable archival visibility for event histories";
        readonly 'archival-empty-state-description': "No results found for archival visibility.";
        readonly 'basic-search': "Basic Search";
        readonly 'advanced-search': "Advanced Search";
        readonly 'time-range': "Time Range";
        readonly 'pending-activities-link': "Show all Pending Activities";
        readonly 'duration-filter-placeholder': "e.g. \"2h45m\", \"hh:mm:ss\", or \"1000\" nanoseconds";
        readonly 'start-workflow': "Start Workflow";
        readonly 'start-workflow-like-this-one': "Start Workflow Like This One";
        readonly 'custom-search-attribute': "Custom Search Attribute";
        readonly 'select-attribute': "Select Attribute";
        readonly 'unsupported-attribute': "Unsupported attribute type";
        readonly 'add-search-attribute': "Add a Search Attribute";
        readonly 'pending-workflow-task': "Pending Workflow Task";
        readonly 'original-scheduled-time': "Original Scheduled Time";
        readonly 'started-time': "Started Time";
        readonly 'start-workflow-success': "Workflow started successfully";
        readonly 'start-workflow-error': "Error starting Workflow";
        readonly encoding: "Encoding";
        readonly 'message-type': "Message Type";
        readonly 'user-metadata': "User Metadata";
        readonly 'markdown-supported': "Markdown Supported";
        readonly 'markdown-description': "Markdown is supported in the summary and details fields. You can use {namespace}, {workflowId} or {runId} syntax in link href to create dynamic links based on the page you are on. Images are not allowed.";
        readonly 'update-id': "Update ID (optional)";
        readonly 'update-name-label': "Update name";
        readonly 'no-current-details': "No Current Details";
        readonly 'update-details': "Update Details";
    };
    readonly "typed-errors": {
        readonly 'link-preface': "Learn more about ";
        readonly Unspecified: {
            readonly title: "Unspecified";
            readonly description: "The Workflow Task failed. See error for details.";
        };
        readonly UnhandledCommand: {
            readonly title: "Unhandled Command";
            readonly description: "The Workflow Task failed because there are new available events since the last Workflow Task started. A retry Workflow Task has been scheduled and the Workflow will have a chance to handle those new events.";
        };
        readonly BadScheduleActivityAttributes: {
            readonly title: "Bad Schedule Activity Attributes";
            readonly description: "The Workflow Task failed because of missing or incorrect ScheduleActivity attributes.";
        };
        readonly BadRequestCancelActivityAttributes: {
            readonly title: "Bad Request Cancel Activity Attributes";
            readonly description: "The Workflow Task failed because of bad RequestCancelActivity attributes. An Activity was scheduled to cancel, but the scheduled event id was never set.";
        };
        readonly BadStartTimerAttributes: {
            readonly title: "Bad Start Timer Attributes";
            readonly description: "The Workflow Task failed because the scheduled event is missing a timer id.";
        };
        readonly BadCancelTimerAttributes: {
            readonly title: "Bad Cancel Timer Attributes";
            readonly description: "The Workflow Task failed when trying to cancel a timer due to an unset timer id.";
        };
        readonly BadRecordMarkerAttributes: {
            readonly title: "Bad Record Marker Attributes";
            readonly description: "The Workflow Task failed because of a missing or invalid Marker name.";
        };
        readonly BadCompleteWorkflowExecutionAttributes: {
            readonly title: "Bad Complete Workflow Execution Attributes";
            readonly description: "The Workflow Task failed because of an unset attribute on CompleteWorkflowExecution.";
        };
        readonly BadFailWorkflowExecutionAttributes: {
            readonly title: "Bad Fail Workflow Execution Attributes";
            readonly description: "The Workflow Task failed because of an unset FailWorkflowExecution attribute or failure.";
        };
        readonly BadCancelWorkflowExecutionAttributes: {
            readonly title: "Bad Cancel Workflow Execution Attributes";
            readonly description: "The Workflow Task failed because of an unset attribute on CancelWorkflowExecution.";
        };
        readonly BadRequestCancelExternalAttributes: {
            readonly title: "Bad Request Cancel External Attributes";
            readonly description: "The Workflow Task failed due to an invalid attribute on a request to cancel an external Workflow. Check the Failure Message for more details.";
        };
        readonly BadContinueAsNewAttributes: {
            readonly title: "Bad Continue As New Attributes";
            readonly description: "The Workflow Task failed because it failed to validate on a ContinueAsNew attribute. Check the Failure Message for more details.";
        };
        readonly StartTimerDuplicateId: {
            readonly title: "Start Timer Duplicate ID";
            readonly description: "The Workflow Task failed because a timer with the given timer id has already started.";
        };
        readonly ResetStickyTaskQueue: {
            readonly title: "Reset Sticky Task Queue";
            readonly description: "The Workflow Task failed because the Sticky Task Queue needs to be reset. The system will automatically retry.";
        };
        readonly WorkflowWorkerUnhandledFailure: {
            readonly title: "Workflow Worker Unhandled Failure";
            readonly description: "The Workflow Task failed due to an unhandled failure from the Workflow code.";
            readonly action: "deterministic constraints";
            readonly link: "https://docs.temporal.io/workflows/#deterministic-constraints";
        };
        readonly WorkflowTaskHeartbeatError: {
            readonly title: "Workflow Task Heartbeat Error";
            readonly description: "The Workflow Task failed to send a heartbeat while executing long-running local Activities. These local Activities will re-execute on the next Workflow Task attempt. If this error is persistent, these local Activities will run repeatedly until the Workflow times out.";
        };
        readonly BadSignalWorkflowExecutionAttributes: {
            readonly title: "Bad Signal Workflow Execution Attributes";
            readonly description: "The Workflow Task failed to validate attributes for SignalWorkflowExecution. Check the Failure Message for more details.";
        };
        readonly BadStartChildExecutionAttributes: {
            readonly title: "Bad Start Child Execution Attributes";
            readonly description: "The Workflow Task failed to validate attributes needed for StartChildWorkflowExecution. Check the Failure Message for more details.";
        };
        readonly ForceCloseCommand: {
            readonly title: "Force Close Command";
            readonly description: "The Workflow Task was forced to close. A retry will be scheduled if the error is recoverable.";
        };
        readonly FailoverCloseCommand: {
            readonly title: "Failover Close Command";
            readonly description: "The Workflow Task was forced to close due to a Namespace failover. A retry will be scheduled automatically.";
        };
        readonly BadSignalInputSize: {
            readonly title: "Bad Signal Input Size";
            readonly description: "The payload has exceeded the available input size on a Signal.";
        };
        readonly BadBinary: {
            readonly title: "Bad Binary";
            readonly description: "The system failed this Workflow Task because the deployment of this Worker is marked as bad binary.";
        };
        readonly ScheduleActivityDuplicateId: {
            readonly title: "Schedule Activity Duplicate ID";
            readonly description: "The Workflow Task failed because the Activity ID is already in use, please check if you have specified the same Activity ID in your workflow.";
        };
        readonly BadSearchAttributes: {
            readonly title: "Bad Search Attributes";
            readonly description: "A Search attribute is either missing or the value exceeds the limit. This might cause Workflow tasks to continue to retry without success.";
            readonly action: "configuring search attributes";
            readonly link: "https://docs.temporal.io/visibility#search-attribute";
        };
        readonly NonDeterministicError: {
            readonly title: "Non Deterministic Error";
            readonly description: "A non-deterministic error has caused the Workflow Task to fail. This usually means the workflow code has a non-backward compatible change without a proper versioning branch.";
        };
        readonly BadModifyWorkflowPropertiesAttributes: {
            readonly title: "Bad Modify Workflow Properties Attributes";
            readonly description: "The Workflow Task failed to validate attributes on ModifyWorkflowProperty on the upsert memo. Check the Failure Message for more details.";
        };
        readonly PendingChildWorkflowsLimitExceeded: {
            readonly title: "Pending Child Workflows Limit Exceeded";
            readonly description: "The capacity for pending child Workflows has been reached. The Workflow Task was failed to prevent any more child Workflows from being added.";
        };
        readonly PendingActivitiesLimitExceeded: {
            readonly title: "Pending Activities Limit Exceeded";
            readonly description: "The capacity for pending Activities has been reached. The Workflow Task was failed to prevent another Activity from being created.";
        };
        readonly PendingSignalsLimitExceeded: {
            readonly title: "Pending Signals Limit Exceeded";
            readonly description: "The capacity for pending Signals to be sent from this Workflow has been reached.";
        };
        readonly PendingRequestCancelLimitExceeded: {
            readonly title: "Pending Request Cancel Limit Exceeded";
            readonly description: "The capacity for pending requests to cancel other Workflows has been reached.";
        };
        readonly BadUpdateWorkflowExecutionMessage: {
            readonly title: "Bad Update";
            readonly description: "A Workflow Execution tried to complete before receiving an Update.";
        };
        readonly UnhandledUpdate: {
            readonly title: "Unhandled Update";
            readonly description: "A Workflow Update was received by the Temporal Server while a Workflow Task was being processed on a Worker.";
        };
        readonly BadScheduleNexusOperationAttributes: {
            readonly title: "Bad Schedule Nexus Operation Attributes";
            readonly description: "A workflow task completed with an invalid ScheduleNexusOperation command.";
        };
        readonly PendingNexusOperationsLimitExceeded: {
            readonly title: "Pending Nexus Operations Limit Exceeded";
            readonly description: "A workflow task completed requesting to schedule a Nexus Operation exceeding the server configured limit.";
        };
        readonly BadRequestCancelNexusOperationAttributes: {
            readonly title: "Bad Request Cancel Nexus Operation Attributes";
            readonly description: "A workflow task completed with an invalid RequestCancelNexusOperation command.";
        };
        readonly FeatureDisabled: {
            readonly title: "Feature Disabled";
            readonly description: "A workflow task completed requesting a feature that's disabled on the server (either system wide or - typically - for the workflow's namespace). Check the workflow task failure message for more information.";
        };
    };
    readonly events: {
        readonly 'empty-state-title': "No Events Match";
        readonly 'empty-state-description': "There are no events that match your filters or selected view. Adjust your filters or view to see your events.";
        readonly 'group-empty-state-title': "Event Group Not Found";
        readonly 'sort-ascending': "Sort 1-9";
        readonly 'sort-descending': "Sort 9-1";
        readonly 'date-and-time': "Date & Time";
        readonly 'show-elapsed-time': "Show Elapsed Time & Duration";
        readonly 'event-type': "Event Type";
        readonly 'workflow-events': "Workflow Events";
        readonly category: {
            readonly all: "All";
            readonly activity: "Activity";
            readonly 'activity-tooltip': "An Activity is a normal function or method execution that's intended to execute a single, well-defined action.";
            readonly 'child-workflow': "Child Workflow";
            readonly 'child-workflow-tooltip': "A Child Workflow Execution is a Workflow Execution that is spawned from within another Workflow in the same Namespace.";
            readonly command: "Command";
            readonly 'command-tooltip': "Command Events";
            readonly other: "Other";
            readonly 'other-tooltip': "Marker Recorded, Upsert Search Attributes and Workflow Properties Modified.";
            readonly 'local-activity': "Local Activity";
            readonly 'local-activity-tooltip': "A Local Activity is an Activity Execution that executes in the same process as the Workflow Execution that spawns it.";
            readonly nexus: "Nexus";
            readonly 'nexus-tooltip': "Nexus connects durable executions within and across Namespaces.";
            readonly signal: "Signal";
            readonly 'signal-tooltip': "Signals are asynchronous write requests. They cause changes in the running Workflow, but you cannot await any response or error.";
            readonly timer: "Timer";
            readonly 'timer-tooltip': "Timers are durable timers set for a fixed time period.";
            readonly update: "Update";
            readonly 'update-tooltip': "Updates are synchronous, tracked write requests. The sender of the Update can wait for a response on completion or an error on failure.";
            readonly workflow: "Workflow";
            readonly 'workflow-tooltip': "A Workflow Task is a Task that contains the context needed to make progress with a Workflow Execution.";
        };
        readonly 'attribute-group': {
            readonly activity: "Activity";
            readonly parent: "Parent";
            readonly 'retry-policy': "Retry Policy";
            readonly schedule: "Schedule";
            readonly 'search-attributes': "Search Attributes";
            readonly summary: "Summary";
            readonly 'task-queue': "Task Queue";
            readonly workflow: "Workflow";
        };
        readonly 'custom-search-attributes': "Custom Search Attributes";
        readonly 'custom-search': "custom search";
        readonly attribute: "attribute";
        readonly 'event-group': "Events related to {{eventName}}";
        readonly 'error-event': "Error Event";
        readonly 'import-event-history': "Import Event History";
        readonly 'import-event-history-file-upload': "Select an event history JSON file to upload";
        readonly 'event-history-view': "Event History View";
        readonly 'api-history-link': "View in Github";
        readonly 'history-expected-formats': "Expected JSON formats";
        readonly 'event-history-import-error': "Could not create event history from JSON";
        readonly 'event-history-load-error': "Could not parse JSON";
        readonly 'event-classification-label': "Event Classification";
        readonly 'event-classification': {
            readonly unspecified: "Unspecified";
            readonly scheduled: "Scheduled";
            readonly open: "Open";
            readonly new: "New";
            readonly started: "Started";
            readonly initiated: "Initiated";
            readonly running: "Running";
            readonly completed: "Completed";
            readonly fired: "Fired";
            readonly cancelrequested: "Cancel Requested";
            readonly timedout: "Timed Out";
            readonly signaled: "Signaled";
            readonly canceled: "Canceled";
            readonly failed: "Failed";
            readonly terminated: "Terminated";
            readonly pending: "Pending";
            readonly retrying: "Retrying";
        };
        readonly 'decode-event-history': "Decode Event History";
        readonly encoded: "Encoded";
        readonly decoded: "Decoded";
        readonly 'decoded-description': "Codec Server decoded and base64 encoded";
        readonly readable: "Human Readable";
        readonly 'readable-description': "Codec Server decoded and base64 decoded";
        readonly 'event-types': "Event Types";
        readonly 'decode-failed': "Decoding failed";
    };
    readonly schedules: {
        readonly edit: "Edit Schedule";
        readonly create: "Create Schedule";
        readonly editing: "Editing Schedule...";
        readonly creating: "Creating Schedule...";
        readonly 'back-to-schedule': "Back to Schedule";
        readonly 'back-to-schedules': "Back to Schedules";
        readonly id: "Schedule ID";
        readonly schedule: "Schedule";
        readonly frequency: "Frequency";
        readonly 'schedule-spec': "Schedule Spec";
        readonly 'schedule-input': "Schedule Input";
        readonly 'empty-state-title': "No Schedules Found";
        readonly 'empty-state-description': "Try adjusting or clearing the filters to see the Schedules running on this Namespace.";
        readonly 'error-message-fetching': "Error fetching schedules";
        readonly 'recent-runs': "Recent Runs";
        readonly 'recent-runs-empty-state-title': "No Recent Runs";
        readonly 'upcoming-runs': "Upcoming Runs";
        readonly 'upcoming-runs-empty-state-title': "No Upcoming Runs";
        readonly loading: "Loading Schedule...";
        readonly deleting: "Deleting Schedule...";
        readonly 'delete-schedule-error': "Cannot delete schedule. {{error}}";
        readonly pause: "Pause";
        readonly unpause: "Unpause";
        readonly 'schedule-actions': "Schedule Actions";
        readonly 'pause-modal-title': "Pause Schedule?";
        readonly 'pause-modal-confirmation': "Are you sure you want to pause {{schedule}}?";
        readonly 'pause-reason': "Enter a reason for pausing the schedule.";
        readonly 'unpause-modal-title': "Unpause Schedule?";
        readonly 'unpause-modal-confirmation': "Are you sure you want to unpause {{schedule}}?";
        readonly 'unpause-reason': "Enter a reason for unpausing the schedule.";
        readonly trigger: "Trigger";
        readonly backfill: "Backfill";
        readonly 'more-options': "More options";
        readonly 'trigger-modal-title': "Trigger Immediately";
        readonly 'trigger-unspecified-title': "Use Policy";
        readonly 'trigger-unspecified-description': "Use the Schedule's overlap policy.";
        readonly 'trigger-skip-title': "Skip";
        readonly 'trigger-skip-description': "When the workflow completes, the next occurrence that is scheduled after that time is considered.";
        readonly 'trigger-buffer-one-title': "Buffer One";
        readonly 'trigger-buffer-one-description': "Start the workflow again as soon as the current workflow completes, but buffer only one start. If another start is scheduled to happen while the workflow is running, and a workflow is already buffered, only the first workflow starts after the running workflow completes.";
        readonly 'trigger-buffer-all-title': "Buffer All";
        readonly 'trigger-buffer-all-description': "Buffer any number of workflow starts to happen sequentially, beginning immediately after the running workflow completes.";
        readonly 'trigger-cancel-other-title': "Cancel Other";
        readonly 'trigger-cancel-other-description': "If another workflow is running, cancel it. After the previous workflow completes cancellation, start the new workflow.";
        readonly 'trigger-terminate-other-title': "Terminate Other";
        readonly 'trigger-terminate-other-description': "If another workflow is running, terminate it and start the new workflow immediately.";
        readonly 'trigger-allow-all-title': "Allow All";
        readonly 'trigger-allow-all-description': "Start any number of concurrent workflows. Last completion result and last failure aren't available because the workflows aren't sequential.";
        readonly 'delete-modal-title': "Delete Schedule?";
        readonly 'delete-modal-confirmation': "Are you sure you want to delete {{schedule}}?";
        readonly 'advanced-settings': "Advanced Settings ";
        readonly 'start-time': "Schedule Start Time";
        readonly 'end-time': "Schedule End Time";
        readonly jitter: "Jitter";
        readonly 'exclusion-calendar': "Exclusion Calendar";
        readonly 'remaining-actions': "Remaining Actions";
        readonly 'overlap-policy': "Overlap Policy";
        readonly 'recurring-dates-heading': "Recurring date(s)";
        readonly 'recurring-dates-description': "Select the specific dates for the schedule to always run on.";
        readonly 'recurring-days-heading': "Recurring day(s)";
        readonly 'recurring-days-description': "Select the day(s) of the week this schedule will always run on.";
        readonly 'time-view-heading': "Time";
        readonly 'time-view-description': "Specify the time (UTC) for this schedule to run. By default, the schedule will run at 00:00 UTC if left blank.";
        readonly 'interval-view-heading': "Recurring Time";
        readonly 'interval-view-description': "Specify the time interval for this schedule to run (for example every 5 minutes).";
        readonly 'offset-heading': "Offset";
        readonly 'offset-unit': "Offset Unit";
        readonly 'offset-description': "Specify the time to offset when this schedule will run (for example 15 min past the hour).";
        readonly 'cron-view-title': "Cron String";
        readonly 'crow-view-example-description': "Temporal Workflow Schedule Cron strings follow this format:";
        readonly 'cron-view-description': "Write or paste in a cron string to generate a schedule.";
        readonly 'error-title': "Error Message";
        readonly 'name-label': "Name";
        readonly 'workflow-id-label': "Workflow Id";
        readonly 'workflow-type-label': "Workflow Type";
        readonly 'task-queue-label': "Task Queue";
        readonly 'getting-started-docs-link-preface': "Go to";
        readonly 'getting-started-docs-link': "docs";
        readonly 'getting-started-cli-link-preface': "or get started with";
    };
    readonly "data-encoder": {
        readonly 'codec-server': "Codec Server";
        readonly 'endpoint-title': "Codec Server browser endpoint";
        readonly 'endpoint-description': "Enter a Codec Server endpoint for this browser. This will be stored in your browser and will only be accessible by you.";
        readonly 'endpoint-placeholder': "Paste your endpoint here";
        readonly 'pass-access-token-label': "Pass the user access token";
        readonly 'include-cross-origin-credentials-label': "Include cross-origin credentials";
        readonly 'include-cross-origin-credentials-warning': "Warning: Pre-flight checks will be done and could result in failure to decode if incorrectly configured.";
        readonly 'port-title': "tctl plugin port ";
        readonly 'port-info': "If both are set, the Codec Server endpoint will be used.";
        readonly 'access-token-https-error': "Endpoint must be https:// if passing access token";
        readonly 'prefix-error': "Endpoint must start with http:// or https://";
        readonly 'codec-server-description-prefix': "A ";
        readonly 'codec-server-description-suffix': " decodes your data. A Codec Server endpoint can be set at the {{level}} level, or locally in your browser.";
        readonly 'browser-override-description': "Use my browser setting and ignore {{level}}-level setting.";
        readonly 'no-browser-override-description': "Use {{level}}-level setting, where available.";
        readonly 'codec-server-configured': "Codec Server is configured";
        readonly 'codec-server-error': "Codec Server could not connect";
        readonly 'codec-server-success': "Codec Server succesfully converted content";
        readonly 'configure-codec-server': "Configure Codec Server";
        readonly 'encode-error': "Codec Server failed to encode";
    };
    readonly namespaces: {
        readonly 'namespace-select-header': "Select a Namespace";
        readonly 'namespace-select-empty-state': "No Namespaces";
        readonly 'namespace-label': "Select a Namespace";
        readonly 'namespaces-empty-state-title': "No Namespaces Found";
        readonly 'namespaces-empty-state-content': "You do not have access to a Namespace. Contact your Administrator for assistance.";
        readonly namespace: "Namespace";
        readonly versions: "Versions";
        readonly owner: "Owner";
        readonly global: "Global";
        readonly 'retention-period': "Retention Period";
        readonly 'history-archival': "History Archival";
        readonly 'visibility-archival': "Visibility Archival";
        readonly 'failover-version': "Failover Version";
        readonly clusters: "Clusters";
        readonly 'client-actions': "Client Actions";
        readonly 'signal-workflow': "Signal Workflow";
        readonly 'unauthorized-namespace-error': "You do not have access to this namespace.";
        readonly 'select-namespace-welcome': "Welcome to Temporal";
        readonly 'select-namespace': "Select a Namespace to get started.";
        readonly 'search-namespaces': "Search Namespaces";
        readonly 'select-namespace-empty-state': "No Namespaces. Contact your admin to create one.";
        readonly 'back-to-namespaces': "Back to Namespaces";
        readonly 'go-to-namespace': "Go to Namespace";
    };
    readonly nexus: {
        readonly nexus: "Nexus";
        readonly 'nexus-endpoint': "Nexus Endpoint | {{id}}";
        readonly endpoint: "Endpoint";
        readonly endpoints: "Nexus Endpoints";
        readonly 'all-endpoints': "All Endpoints";
        readonly 'my-endpoints': "My Endpoints";
        readonly 'back-to-endpoints': "Back To Nexus Endpoints";
        readonly 'back-to-endpoint': "Back To Nexus Endpoint";
        readonly 'create-endpoint': "Create Nexus Endpoint";
        readonly 'endpoint-name': "Endpoint Name";
        readonly 'endpoint-name-placeholder': "Nexus Endpoint must have a unique name";
        readonly 'select-endpoint': "Select a Endpoint";
        readonly 'task-queue-placeholder': "Enter a Task Queue";
        readonly 'endpoint-alias': "Endpoint Alias";
        readonly target: "Target";
        readonly 'target-description': "Specify the target Namespace and task queue the worker will poll on.";
        readonly 'target-namespace': "Target Namespace";
        readonly 'select-namespace': "Select a Namespace";
        readonly 'nexus-description': "Add a link to your repo or instructions to help other users in this account use this endpoint.";
        readonly 'description-placeholder': "//Provide a readme for users to use this endpoint";
        readonly handler: "Handler";
        readonly 'delete-endpoint': "Delete Endpoint";
        readonly 'delete-modal-title': "Delete Nexus Endpoint?";
        readonly 'delete-modal-confirmation-preface': "Are you sure you want to delete ";
        readonly 'delete-modal-confirmation-postface': "Any Workflows calling this endpoint will encounter failures.";
        readonly 'type-confirm-preface': "Type ";
        readonly 'type-confirm-postface': "to delete this endpoint.";
        readonly 'endpoint-name-hint': "Endpoint name must start with A-Z, a-z or _ and can only contain A-Z, a-z, 0-9, or _";
        readonly 'endpoint-name-hint-with-dash': "Endpoint name must start with A-Z or a-z and can only contain A-Z, a-z, 0-9 or -";
        readonly 'access-policy': "Access Policy";
        readonly 'allowed-caller-namespaces': "Allowed caller Namespaces";
        readonly 'allowed-caller-namespaces-description': "Namespace(s) that are allowed to call this Endpoint.";
        readonly 'select-namespaces': "Select Namespace(s)";
        readonly 'selected-namespaces_one': "{{count}} Namespace selected";
        readonly 'selected-namespaces_other': "{{count}} Namespaces selected";
        readonly 'empty-state': "No Nexus Endpoints found, try a new search.";
        readonly 'nexus-callback': "Nexus Callback";
        readonly callback: {
            readonly standby: "Nexus Callback is standing by, waiting to be triggered.";
            readonly scheduled: "Nexus Callback is in the queue waiting to be executed or is currently executing.";
            readonly 'backing-off': "Nexus Callback has failed with a retryable error and is backing off before the next attempt.";
            readonly failed: "Nexus Callback has failed.";
            readonly succeeded: "Nexus Callback has succeeded.";
        };
        readonly 'callback-url': "Callback URL";
        readonly 'last-attempt-completed-time': "Last Attempt Completed Time";
        readonly 'next-attempt-scheduled-time': "Next Attempt Scheduled Time";
        readonly 'last-attempt-failure': "Last Attempt Failure";
        readonly 'blocked-reason': "Blocked Reason";
        readonly link: "Link";
        readonly 'link-namespace': "Link Namespace";
    };
    readonly workers: {
        readonly workers: "Workers";
        readonly version: "Version";
        readonly versioning: "Versioning";
        readonly retirability: "Retirability";
        readonly buildId: "Build ID";
        readonly 'assignment-rules': "Assignment Rules";
        readonly 'redirect-rules': "Redirect Rules";
        readonly default: "Default";
        readonly overall: "Overall";
        readonly 'compatible-build-ids': "Compatible Build IDs";
        readonly 'version-sets': "Version Sets";
        readonly 'no-version-sets-found': "No Version Sets found";
        readonly 'no-assignment-rules-found': "No Assignment Rules found";
        readonly 'no-redirect-rules-found': "No Redirect Rules found";
        readonly 'show-inactive-assignment-rules': "Show Inactive Assignment Rules";
        readonly 'last-used-version': "Last used version";
        readonly 'next-version': "Next version";
        readonly 'ready-to-be-retired': "Ready to be Retired";
        readonly 'max-version-sets-title': "Limit reached for Compatible Version Sets";
        readonly 'max-version-sets-description': "You can increase the number of Compatible Version sets via the limit.versionCompatibleSetsPerQueue dynamic config property.";
    };
};
